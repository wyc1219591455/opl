<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.zhengjie.modules.opl.mapper.QueuesToDeptMapper">

    <!--获取明细下人员数据-->
    <select id="findByQueueId" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
        SELECT t3.user_id as userId,t3.FUserName as userName,t3.FHumanName as humanName,
        t4.FDeptName as deptName,t1.code,t1.name,t1.id
        FROM trequestqueues t1 LEFT JOIN
        queuesToDept t2 ON t1.id =t2.queuesId
        LEFT JOIN tsysdept t4 ON t2.sourceId = t4.FDeptId
		LEFT JOIN tsysuser t3 ON t3.FDeptId = t4.FSourceCode
        WHERE t2.type =0 and t1.id = #{id}
        UNION
        SELECT t3.user_id as userId,t3.FUserName as userName,t3.FHumanName as humanName,
        t4.FDeptName as deptName,t1.code,t1.name,t1.id
        FROM trequestqueues t1 LEFT JOIN
        queuesToDept t2 ON t1.id =t2.queuesId
        LEFT JOIN tsysuser t3 ON t2.sourceId = t3.user_id
		 LEFT JOIN tsysdept t4 ON t4.FSourceCode = t3.FDeptId
        WHERE t2.type =1 and t1.id = #{id}
    </select>

    <!--根据部门id获取所有的人员-->
    <select id="findAllUserByDeptId" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
        SELECT t1.user_id as userId,t1.FUserName as userName,t1.FHumanName as humanName,
        t2.FDeptId as deptId,t2.FDeptName as deptName  FROM tsysuser t1
         LEFT JOIN tsysdept t2 ON t1.FDeptId = t2.FSourceCode
         WHERE t2.FDeptId =#{deptId}
    </select>

    <!-- 根据服务分类条目id获取部门信息 sys_user -->
    <select id="findDeptByCatalogId" resultType="me.zhengjie.modules.opl.service.dto.SysDeptDto">
    SELECT t4.FDeptId as deptId,t4.FParentId as pid,t4.FOrgId as orgId,t4.FFlag as enabled,
    t4.create_by as createBy,t4.update_by as updateBy,t4.create_time as createTime,t4.update_time as updateTime
     FROM tsysdept t4 WHERE EXISTS (SELECT c1.* FROM
    (SELECT t3.FDeptId FROM queuesToDept t1
    LEFT JOIN tsysuser t2
    ON t1.sourceId=t2.user_id AND
    EXISTS(SELECT * FROM tsysuser s1 WHERE s1.user_id = t1.sourceId)
    LEFT JOIN tsysdept t3
    ON t3.FSourceCode = t2.FDeptId
	WHERE t1.status = 1 AND t1.queuesId in
	(SELECT c2.queuesId FROM serviceCatalogToQueues c2 WHERE c2.catalogId = #{catalogId})
    GROUP BY t3.FDeptId) c1 WHERE c1.FDeptId=t4.FDeptId)
    </select>

    <!--
    根据部门id获取所有的人员  sys_user
    SELECT t1.user_id as userId,t1.dept_id as deptId ,
        t1.username as userName,t1.nick_name as humanName,
        t2.name as deptName FROM tsysuser t1
        LEFT JOIN sys_dept t2 ON t1.dept_id=t2.dept_id
        WHERE t1.enabled=1 AND t1.dept_id=#{deptId}
        -->
    <select id="findAllUserByDeptId2" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
        SELECT t1.user_id as userId,t2.FDeptId as deptId ,
        t1.FUserName as userName,t1.FHumanName as humanName,
        t2.FDeptFullName as deptName FROM tsysuser t1
        LEFT JOIN tsysdept t2 ON t1.FDeptId=t2.FSourceCode
        WHERE t1.FFlag=1 AND t2.FDeptId=#{deptId}
    </select>

    <!--根据用户id获取所有服务分类条目-->
    <select id="findServiceCatalogByUserId" resultType="java.lang.Integer">
    SELECT catalogId FROM subServiceCatalog t1 WHERE t1.defaultQueueId in (
    -- 人对应的支持组id
    SELECT queuesId FROM queuesToDept WHERE type=1 and sourceId = #{userId}
    UNION
    -- 部门对应的支持组id
    SELECT queuesId FROM queuesToDept WHERE type=0 and sourceId in (
    SELECT s1.FDeptId FROM tsysuser s1 left JOIN
    tsysdept s2 on s1.FDeptId = s2.FSourceCode
    WHERE  s1.user_id=#{userId} and s2.FFlag = 1
    )
    )
    </select>

    <!--根据部门id和支持组id获取所有的人员-->
    <select id="findAllUserByDeptIdAndQueueId" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
         SELECT t1.user_id as userId,t1.FUserName as userName,t1.FHumanName as humanName,
        t2.FDeptId as deptId,t2.FDeptName as deptName ,
	    ( CASE  WHEN EXISTS ( SELECT * FROM queuesToDept t3 WHERE t3.type=1 AND t3.sourceId=t1.user_id AND t3.queuesId = #{queuesId} ) THEN 1
	    ELSE 0 END ) as flag FROM tsysuser t1
         LEFT JOIN tsysdept t2 ON t1.FDeptId = t2.FSourceCode
         WHERE t2.FDeptId = #{deptId}
        <if test="name!=null and name!=''">
            AND ( t1.FHumanName like concat('%',#{name},'%') OR t1.FUserName like concat('%',#{name},'%') )
        </if>
    </select>

    <!--根据部门id和支持组id获取所有的人员2-->
    <select id="findAllUserByDeptIdAndQueueId2" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
        SELECT t1.user_id as userId,t1.FUserName as userName,t1.FHumanName as humanName,
        t2.FDeptId as deptId,t2.FDeptName as deptName ,
	    ( CASE  WHEN EXISTS ( SELECT * FROM queuesToDept t3 WHERE t3.type=1 AND t3.sourceId=t1.user_id AND t3.queuesId = #{queuesId} ) THEN 1
	    ELSE 0 END ) as flag FROM tsysuser t1
         LEFT JOIN tsysdept t2 ON t1.FDeptId = t2.FSourceCode
        WHERE t2.FDeptId in
        <foreach  collection="deptList" item="item" index="index" separator="," open="(" close=")" >
         #{item}
        </foreach>

        <if test="name!=null and name!=''">
            AND ( t1.FHumanName like concat('%',#{name},'%') OR t1.FUserName like concat('%',#{name},'%') )
        </if>
    </select>

    <!-- 根据名称获取所有的人员进行模糊查询 -->
    <select id="findAllUserByName" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
        SELECT t1.user_id as userId,t1.FUserName as userName,t1.FHumanName as humanName,
        t2.FDeptId as deptId,t2.FDeptName as deptName ,
	    ( CASE  WHEN EXISTS ( SELECT * FROM queuesToDept t3 WHERE t3.type=1 AND t3.sourceId=t1.user_id AND t3.queuesId = #{queuesId} ) THEN 1
	    ELSE 0 END ) as flag FROM tsysuser t1
         LEFT JOIN tsysdept t2 ON t1.FDeptId = t2.FSourceCode WHERE 1=1
        <if test="name!=null and name!=''">
            AND ( t1.FHumanName like concat('%',#{name},'%') OR t1.FUserName like concat('%',#{name},'%') )
        </if>
    </select>

    <!-- 根据父类id获取总数（判断此部门是不是最底层部门） -->
    <select id="getCountByParentId" resultType="java.lang.Integer">
        SELECT count(0) as a FROM tsysdept t2 WHERE t2.FParentId in
        (SELECT t1.FSourceCode FROM tsysdept t1 WHERE t1.FDeptId = #{deptId} ) AND t2.FFlag = 1
    </select>

    <!---->
    <select id="getListByParentId" resultType="java.lang.Integer">
         SELECT t2.FDeptId FROM tsysdept t2 WHERE t2.FParentId in
        (SELECT t1.FSourceCode FROM tsysdept t1 WHERE t1.FDeptId = #{deptId} ) AND t2.FFlag = 1
    </select>

    <!-- 获取已勾选的数据 -->
    <select id="findAllUserInUse" resultType="me.zhengjie.modules.opl.service.dto.UserForShow">
         SELECT t1.user_id as userId,t1.FUserName as userName,t1.FHumanName as humanName,
        t2.FDeptId as deptId,t2.FDeptName as deptName ,
	   1 as flag FROM tsysuser t1
         LEFT JOIN tsysdept t2 ON t1.FDeptId = t2.FSourceCode
        WHERE ( CASE  WHEN EXISTS ( SELECT * FROM queuesToDept t3 WHERE t3.type=1 AND t3.sourceId=t1.user_id AND t3.queuesId =#{queuesId} ) THEN 1
	    ELSE 0 END ) = 1
	    <if test="name!=null and name!=''">
            AND ( t1.FHumanName like concat('%',#{name},'%') OR t1.FUserName like concat('%',#{name},'%') )
        </if>
	    ORDER BY t2.FDeptId
    </select>

    <!--根据父类id获取总数（判断此部门是不是最底层部门）-->
    <select id="getCountByOrgId" resultType="java.lang.Integer">
         SELECT count(0) as a FROM tsysdept t2 WHERE t2.FParentId in
        (SELECT t1.FOrgSourceId FROM tsysorgas t1 WHERE t1.FOrgId = #{orgId} ) AND t2.FFlag = 1
    </select>

    <!--根据父类id获取list（查出部门下面的部门id）-->
    <select id="getListByOrgId" resultType="java.lang.Integer">
        SELECT t2.FDeptId FROM tsysdept t2 WHERE t2.FParentId in
        (SELECT t1.FOrgSourceId FROM tsysorgas t1 WHERE t1.FOrgId = #{orgId} ) AND t2.FFlag = 1
    </select>

    <!-- 获取明细下关联数据 -->
    <select id="findQueuesToDeptByQueuesId" resultType="me.zhengjie.modules.opl.domain.QueuesToDept">
        SELECT * FROM queuesToDept WHERE queuesId = #{queuesId} and type = 1
    </select>

    <!-- 查是否存在此组id和人id的数据 -->
    <select id="findByQueuesIdAndSourceId" resultType="java.lang.Integer">
         SELECT count(*) as a FROM queuesToDept WHERE queuesId = #{queuesId} and sourceId = #{sourceId} and type = 1
    </select>

    <!-- 获取服务分类默认服务台下的人 -->
    <select id="findUserInDefaultQueueByCatalogId" resultType="me.zhengjie.modules.opl.domain.User">
         SELECT t.user_id as id, td.FDeptName as deptName,t.FMobileNumber as phoneNo,t.FEmail as email,t.FUserName as userName,
        t.FHumanName as name,t.FPassword as password,
        t.FDeptId as dept,t.FSex as sex,
        t.FFlag as flag,t.avatar_name,t.avatar_path,t.is_admin,t.pwd_reset_time
        FROM tsysuser t
        LEFT JOIN tsysdept td
        on t.FDeptId = td.FSourceCode
        WHERE EXISTS(
        SELECT * FROM queuesToDept q WHERE q.queuesId in (
        SELECT defaultQueueId FROM subServiceCatalog WHERE catalogId =#{catalogId}
        ) and q.sourceId = t.user_id
        ) and t.FFlag=1
    </select>


    <select id="findCcUserByTransId" resultType="me.zhengjie.modules.opl.domain.User">
    SELECT t.user_id as id, t.FMobileNumber as phoneNo,t.FEmail as email,t.FUserName as userName,
        t.FHumanName as name,t.FPassword as password,
        t.FDeptId as dept,t.FSex as sex,
        t.FFlag as flag,t.avatar_name,t.avatar_path,t.is_admin,t.pwd_reset_time FROM orderApplyCc t1
    LEFT JOIN tsysuser t on t1.empId = t.FUserName
    WHERE t1.transId = #{transId}
    </select>

    <!--新增-->
    <insert id="insert" parameterType="me.zhengjie.modules.opl.domain.QueuesToDept">
        INSERT INTO queuesToDept(queuesId,sourceId,type,status,
        createDateTime,createUserId)
        VALUES(#{queuesId},#{sourceId},#{type},#{status},
        #{createDateTime,jdbcType=TIMESTAMP},#{createUserId})
    </insert>

    <!--批量新增-->
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true">
        INSERT INTO queuesToDept(queuesId,sourceId,type,status,
        createDateTime,createUserId) VALUES
        <foreach collection="list" item="item" index="index" separator="," >
         (#{item.queuesId},#{item.sourceId},#{item.type},#{item.status},
        #{item.createDateTime,jdbcType=TIMESTAMP},#{item.createUserId})
        </foreach>
    </insert>

    <!--更新-->
    <update id="update" parameterType="me.zhengjie.modules.opl.domain.QueuesToDept">
        UPDATE queuesToDept SET queuesId=#{queuesId},
        sourceId=#{sourceId},type=#{type},status=#{status},
        modifyDateTime=#{modifyDateTime,jdbcType=TIMESTAMP},modifyUserId=#{modifyUserId}
        WHERE id = #{id}
    </update>

    <!--批量更新-->
    <update id="batchUpdate" parameterType="java.util.List" useGeneratedKeys="true">
        <foreach collection="list" item="item" index="index" separator="," >
        UPDATE queuesToDept SET queuesId=#{item.queuesId},
        sourceId=#{item.sourceId},type=#{item.type},status=#{item.status},
        modifyDateTime=#{item.modifyDateTime,jdbcType=TIMESTAMP},modifyUserId=#{item.modifyUserId}
        WHERE id = #{item.id}
        </foreach>
    </update>

    <!--根据id删除-->
    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM queuesToDept WHERE id = #{id}
    </delete>

    <!-- 根据组id和人员id删除 -->
    <delete id="deleteByQueuesIdAndSourceId" parameterType="java.lang.Integer">
        DELETE FROM queuesToDept WHERE queuesId = #{queuesId} AND sourceId = #{sourceId}
    </delete>

    <!--根据支持组id删除-->
    <delete id="deleteByQueue">
        DELETE FROM queuesToDept WHERE queuesId = #{queuesId}
    </delete>



</mapper>